#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Serenity.CodeGenerator.Views
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    public partial class EntityScriptFormTS : RazorGenerator.Templating.RazorTemplateBase
    {
#line hidden
 public dynamic Model { get; set; } 
        public override void Execute()
        {


WriteLiteral("\r\n");



                                                   
    var dotModule = Model.Module == null ? "" : ("." + Model.Module);
    var moduleDot = Model.Module == null ? "" : (Model.Module + ".");

    Func<EntityCodeField, string> gt = (f) => {
        if (f.Type == "String") {
            return "StringEditor";
        }
        else if (f.Type == "Int32" || f.Type == "Int16" || f.Type == "Int64") {
            return "IntegerEditor";
        }
        else if (f.Type == "Single" || f.Type == "Double" || f.Type == "Decimal") {
            return "DecimalEditor";
        }
        else if (f.Type == "DateTime") {
            return "DateEditor";
        }
        else if (f.Type == "Boolean") {
            return "BooleanEditor";
        }
        else
            return "StringEditor";
    };

    var fields = (IEnumerable<EntityCodeField>)Model.Fields;
    var fieldList = String.Join(", ", fields.Where(x => x.Name != Model.Identity)
        .Select(x => "['" + x.Ident + "', () => Serenity." + gt(x) + "]"));



WriteLiteral("\r\nnamespace ");


      Write(Model.RootNamespace);


                            Write(dotModule);

WriteLiteral(" {\r\n    export class ");


             Write(Model.ClassName);

WriteLiteral("Form extends Serenity.PrefixedContext {\r\n        static formKey = \'");


                      Write(moduleDot);


                                  Write(Model.ClassName);

WriteLiteral("\';\r\n    }\r\n\r\n    export interface ");


                 Write(Model.ClassName);


                                       WriteLiteral("Form {");

                                              foreach (var x in Model.Fields)
    {
        if (x.Ident != Model.Identity)
        {
WriteLiteral("\r\n        ");


    Write(x.Ident);

WriteLiteral(": Serenity.");


                         Write(gt(x));

WriteLiteral(";");


                                             }
    }

WriteLiteral("\r\n    }\r\n\r\n    [");


Write(fieldList);

WriteLiteral("].forEach(x => Object.defineProperty(");


                                                Write(Model.ClassName);

WriteLiteral("Form.prototype, <string>x[0], { get: function () { return this.w(x[0], (x[1] as a" +
"ny)()); }, enumerable: true, configurable: true }));\r\n}");


        }
    }
}
#pragma warning restore 1591
