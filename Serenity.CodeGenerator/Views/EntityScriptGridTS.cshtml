@* Generator: Template *@
@functions { public dynamic Model { get; set; } }@{
    var dotModule = Model.Module == null ? "" : ("." + Model.Module);
    var moduleDot = Model.Module == null ? "" : (Model.Module + ".");
}
namespace @(Model.RootNamespace)@(dotModule) {
    
    @@Serenity.Decorators.registerClass()
    export class @(Model.ClassName)Grid extends Serenity.EntityGrid<@(Model.RowClassName), any> {
        protected getColumnsKey() { return '@(moduleDot)@(Model.ClassName)'; }
        protected getDialogType() { return @(Model.ClassName)Dialog; }@if (Model.Identity != null) {<text>
        protected getIdProperty() { return @(Model.RowClassName).idProperty; }</text>}

        protected getLocalTextPrefix() { return @(Model.RowClassName).localTextPrefix; }
        protected getService() { return @(Model.ClassName)Service.baseUrl; }

        constructor(container: JQuery) {
            super(container);
        }
    }
}